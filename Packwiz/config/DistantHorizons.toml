_version = 3

[common]
	[common.worldGenerator]
		#
		# How detailed should LODs be generated outside the vanilla render distance? 
		# 
		# PRE_EXISTING_ONLY 
		# Only create LOD data for already generated chunks. 
		# 
		# 
		# SURFACE 
		# Generate the world surface, 
		# this does NOT include trees, 
		# or structures. 
		# 
		# FEATURES 
		# Generate everything except structures. 
		# WARNING: This may cause world generator bugs or instability when paired with certain world generator mods. 
		# 
		# INTERNAL_SERVER 
		# Ask the local server to generate/load each chunk. 
		# This is the most compatible and will generate structures correctly, 
		# but may cause server/simulation lag. 
		# Note: unlike other modes this option DOES save generated chunks to 
		# Minecraft's region files.
		distantGeneratorMode = "FEATURES"
		#
		# How should distant generator progress be displayed? 
		# 
		# OVERLAY: may be the same as CHAT for some Minecraft versions 
		# CHAT 
		# LOG 
		# DISABLED
		showGenerationProgress = "DISABLED"
		#
		# How often should the distant generator progress be displayed?
		generationProgressDisplayIntervalInSeconds = 2
		#
		# For how many seconds should instructions for disabling the distant generator progress be displayed? 
		# Setting this to 0 hides the instructional message so the world gen progress is shown immediately when it starts.
		generationProgressDisableMessageDisplayTimeInSeconds = 20
		#
		# Should Distant Horizons slowly generate LODs 
		#  outside the vanilla render distance? 
		# Depending on the generator mode, this will import existing chunks 
		# and/or generating missing chunks.
		enableDistantGeneration = true

[client]
	[client.advanced]
		[client.advanced.graphics]
			[client.advanced.graphics.fog]
				#
				# Should Minecraft's fog render? 
				# Note: Other mods may conflict with this setting.
				enableVanillaFog = false
				#
				# What is the maximum fog thickness? 
				# 
				# 0.0: No fog. 
				# 1.0: Fully opaque fog.
				farFogMax = "1.0"
				#
				# Determines if fog is drawn on DH LODs.
				enableDhFog = true
				#
				# At what distance should the far fog start? 
				# 
				# 0.0: Fog starts at the player's position. 
				# 1.0: Fog starts at the closest edge of the vanilla render distance. 
				# 1.414: Fog starts at the corner of the vanilla render distance.
				farFogStart = "0.0"
				#
				# What is the minimum fog thickness? 
				# 
				# 0.0: No fog. 
				# 1.0: Fully opaque fog.
				farFogMin = "0.1"
				#
				# What color should fog use? 
				# 
				# USE_WORLD_FOG_COLOR: Use the world's fog color. 
				# USE_SKY_COLOR: Use the sky's color.
				colorMode = "USE_WORLD_FOG_COLOR"
				#
				# How should the fog thickness should be calculated? 
				# 
				# LINEAR: Linear based on distance (will ignore 'density')
				# EXPONENTIAL: 1/(e^(distance*density)) 
				# EXPONENTIAL_SQUARED: 1/(e^((distance*density)^2)
				farFogFalloff = "LINEAR"
				#
				# Used in conjunction with the Fog Falloff.
				farFogDensity = "2.5"
				#
				# Where should the far fog end? 
				# 
				# 0.0: Fog ends at player's position.
				# 1.0: Fog ends at the closest edge of the vanilla render distance. 
				# 1.414: Fog ends at the corner of the vanilla render distance.
				farFogEnd = "1.0"

				[client.advanced.graphics.fog.heightFog]
					#
					# Where should the height fog start? 
					# 
					# ABOVE_CAMERA: Height fog starts at the camera and goes towards the sky 
					# BELOW_CAMERA: Height fog starts at the camera and goes towards the void 
					# ABOVE_AND_BELOW_CAMERA: Height fog starts from the camera to goes towards both the sky and void 
					# ABOVE_SET_HEIGHT: Height fog starts from a set height and goes towards the sky 
					# BELOW_SET_HEIGHT: Height fog starts from a set height and goes towards the void 
					# ABOVE_AND_BELOW_SET_HEIGHT: Height fog starts from a set height and goes towards both the sky and void
					heightFogDirection = "ABOVE_AND_BELOW_CAMERA"
					#
					# What is the minimum fog thickness? 
					# 
					# 0.0: No fog. 
					# 1.0: Fully opaque fog.
					heightFogMin = "0.0"
					#
					# If the height fog is calculated around a set height, what is that height position?
					heightFogBaseHeight = "80.0"
					#
					# What is the maximum fog thickness? 
					# 
					# 0.0: No fog. 
					# 1.0: Fully opaque fog.
					heightFogMax = "1.0"
					#
					# How should the height fog thickness should be calculated? 
					# 
					# LINEAR: Linear based on height (will ignore 'density')
					# EXPONENTIAL: 1/(e^(height*density)) 
					# EXPONENTIAL_SQUARED: 1/(e^((height*density)^2)
					heightFogFalloff = "EXPONENTIAL"
					#
					# What is the height fog's density?
					heightFogDensity = "20.0"
					#
					# How should height effect the fog thickness? 
					# Note: height fog is combined with the other fog settings. 
					# 
					# SPHERICAL: Fog is calculated based on camera distance. 
					# CYLINDRICAL: Ignore height, fog is calculated based on horizontal distance. 
					# 
					# MAX: max(heightFog, farFog) 
					# ADDITION: heightFog + farFog 
					# MULTIPLY: heightFog * farFog 
					# INVERSE_MULTIPLY: 1 - (1-heightFog) * (1-farFog) 
					# LIMITED_ADDITION: farFog + max(farFog, heightFog) 
					# MULTIPLY_ADDITION: farFog + farFog * heightFog 
					# INVERSE_MULTIPLY_ADDITION: farFog + 1 - (1-heightFog) * (1-farFog) 
					# AVERAGE: farFog*0.5 + heightFog*0.5
					heightFogMixMode = "MULTIPLY_ADDITION"
					#
					# Should the start of the height fog be offset? 
					# 
					# 0.0: Fog start with no offset.
					# 1.0: Fog start with offset of the entire world's height. (Includes depth)
					heightFogStart = "0.0"
					#
					# Should the end of the height fog be offset? 
					# 
					# 0.0: Fog end with no offset.
					# 1.0: Fog end with offset of the entire world's height. (Include depth)
					heightFogEnd = "0.6"
